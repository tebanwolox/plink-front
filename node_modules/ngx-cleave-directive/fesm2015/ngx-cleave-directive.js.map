{"version":3,"file":"ngx-cleave-directive.js.map","sources":["ng://ngx-cleave-directive/ngx-cleave.directive.ts","ng://ngx-cleave-directive/ngx-cleave-directive.module.ts"],"sourcesContent":["import {\n  Directive,\n  ElementRef,\n  HostListener,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n} from '@angular/core';\nimport {\n  ControlValueAccessor,\n  NG_VALUE_ACCESSOR,\n} from '@angular/forms';\n\nimport * as Cleave from 'cleave.js';\n\n@Directive({\n  selector: 'input[cleave],textarea[cleave]',\n})\nexport class NgxCleaveDirective implements OnInit, OnDestroy {\n\n  @Input() set cleave (cleave: any) {\n\n    this._cleave = cleave;\n\n    this.setCleave();\n\n  }\n\n  private _cleave: any;\n  private _cleaveInstance: Cleave;\n  private _value: string;\n  private _valueAccessor: ControlValueAccessor;\n  private _writeValue: (value) => void;\n\n  constructor (\n    private elementRef: ElementRef,\n    @Inject(NG_VALUE_ACCESSOR) @Optional() private valueAccessors: ControlValueAccessor[],\n  ) {\n  }\n\n  ngOnInit () {\n\n    if (!this.valueAccessors) {\n\n      console.warn('Note: The cleave directive should be used with the ngModel, formControl or formControlName directives.');\n\n      return;\n\n    }\n\n    if (this.valueAccessors.length) {\n\n      this._valueAccessor = this.valueAccessors[0];\n\n      this._writeValue = this._valueAccessor.writeValue;\n      this._valueAccessor.writeValue = (value) => {\n\n        if (this._writeValue) {\n          this._writeValue.call(this._valueAccessor, value);\n        }\n\n        this.setCleave();\n\n      };\n\n    }\n\n  }\n\n  ngOnDestroy () {\n\n    if (this._valueAccessor && this._writeValue) {\n\n      this._valueAccessor.writeValue = this._writeValue;\n\n    }\n\n    if (this._cleaveInstance) {\n\n      this._cleaveInstance.destroy();\n\n    }\n\n  }\n\n  @HostListener('input', ['$event.target.value'])\n  onInput (value: string): void {\n\n    this._value = value;\n\n  }\n\n  private setCleave () {\n\n    if (this._cleaveInstance) {\n\n      this._cleaveInstance.destroy();\n\n    }\n\n    const el = this.elementRef.nativeElement;\n    this._cleaveInstance = new Cleave(el, {\n      ...this._cleave,\n      onValueChanged: ({ target }) => {\n        if (target.value !== this._value) {\n\n          this.dispatchEvent(el, 'input');\n\n        }\n      },\n    });\n\n    // hack for model -> view cleave\n    setTimeout(() => this.dispatchEvent(el, 'input'), 0);\n\n  }\n\n  private dispatchEvent (el, eventType) {\n\n    const event = document.createEvent('Event');\n    event.initEvent(eventType, false, false);\n    el.dispatchEvent(event);\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgxCleaveDirective } from './ngx-cleave.directive';\n\n@NgModule({\n  imports: [],\n  declarations: [NgxCleaveDirective],\n  exports: [NgxCleaveDirective],\n})\nexport class NgxCleaveDirectiveModule {\n}\n"],"names":[],"mappings":";;;;;;;;AAAA;;;;;IAoCE,YACU,YACuC;QADvC,eAAU,GAAV,UAAU;QAC6B,mBAAc,GAAd,cAAc;KAE9D;;;;;QAlBY,MAAM,CAAE,MAAW;QAE9B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QAEtB,IAAI,CAAC,SAAS,EAAE,CAAC;;;;;IAgBnB,QAAQ;QAEN,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;YAExB,OAAO,CAAC,IAAI,CAAC,wGAAwG,CAAC,CAAC;YAEvH,OAAO;SAER;QAED,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE;YAE9B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;YAE7C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC;YAClD,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,CAAC,KAAK;gBAErC,IAAI,IAAI,CAAC,WAAW,EAAE;oBACpB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;iBACnD;gBAED,IAAI,CAAC,SAAS,EAAE,CAAC;aAElB,CAAC;SAEH;KAEF;;;;IAED,WAAW;QAET,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,WAAW,EAAE;YAE3C,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;SAEnD;QAED,IAAI,IAAI,CAAC,eAAe,EAAE;YAExB,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;SAEhC;KAEF;;;;;IAGD,OAAO,CAAE,KAAa;QAEpB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;;;;;IAId,SAAS;QAEf,IAAI,IAAI,CAAC,eAAe,EAAE;YAExB,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;SAEhC;QAED,uBAAM,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;QACzC,IAAI,CAAC,eAAe,GAAG,IAAI,MAAM,CAAC,EAAE,oBAC/B,IAAI,CAAC,OAAO,IACf,cAAc,EAAE,CAAC,EAAE,MAAM,EAAE;gBACzB,IAAI,MAAM,CAAC,KAAK,KAAK,IAAI,CAAC,MAAM,EAAE;oBAEhC,IAAI,CAAC,aAAa,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;iBAEjC;aACF,IACD,CAAC;;QAGH,UAAU,CAAC,MAAM,IAAI,CAAC,aAAa,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;;;;;;;IAI/C,aAAa,CAAE,EAAE,EAAE,SAAS;QAElC,uBAAM,KAAK,GAAG,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAC5C,KAAK,CAAC,SAAS,CAAC,SAAS,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QACzC,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;;;;YA1G3B,SAAS,SAAC;gBACT,QAAQ,EAAE,gCAAgC;aAC3C;;;;YAjBC,UAAU;wCAoCP,MAAM,SAAC,iBAAiB,cAAG,QAAQ;;;uBAhBrC,KAAK;wBAiEL,YAAY,SAAC,OAAO,EAAE,CAAC,qBAAqB,CAAC;;;;;;;ACvFhD;;;YAGC,QAAQ,SAAC;gBACR,OAAO,EAAE,EAAE;gBACX,YAAY,EAAE,CAAC,kBAAkB,CAAC;gBAClC,OAAO,EAAE,CAAC,kBAAkB,CAAC;aAC9B;;;;;;;;;;;;;;;"}
