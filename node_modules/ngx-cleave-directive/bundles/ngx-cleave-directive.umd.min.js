!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("tslib"),require("@angular/core"),require("@angular/forms"),require("cleave.js")):"function"==typeof define&&define.amd?define("ngx-cleave-directive",["exports","tslib","@angular/core","@angular/forms","cleave.js"],t):t(e["ngx-cleave-directive"]={},e.tslib,e.ng.core,e.ng.forms,null)}(this,function(e,r,t,n,s){"use strict";var i=function(){function e(e,t){this.elementRef=e,this.valueAccessors=t}return Object.defineProperty(e.prototype,"cleave",{set:function(e){this._cleave=e,this.setCleave()},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){var t=this;this.valueAccessors?this.valueAccessors.length&&(this._valueAccessor=this.valueAccessors[0],this._writeValue=this._valueAccessor.writeValue,this._valueAccessor.writeValue=function(e){t._writeValue&&t._writeValue.call(t._valueAccessor,e),t.setCleave()}):console.warn("Note: The cleave directive should be used with the ngModel, formControl or formControlName directives.")},e.prototype.ngOnDestroy=function(){this._valueAccessor&&this._writeValue&&(this._valueAccessor.writeValue=this._writeValue),this._cleaveInstance&&this._cleaveInstance.destroy()},e.prototype.onInput=function(e){this._value=e},e.prototype.setCleave=function(){var t=this;this._cleaveInstance&&this._cleaveInstance.destroy();var n=this.elementRef.nativeElement;this._cleaveInstance=new s(n,r.__assign({},this._cleave,{onValueChanged:function(e){e.target.value!==t._value&&t.dispatchEvent(n,"input")}})),setTimeout(function(){return t.dispatchEvent(n,"input")},0)},e.prototype.dispatchEvent=function(e,t){var n=document.createEvent("Event");n.initEvent(t,!1,!1),e.dispatchEvent(n)},e.decorators=[{type:t.Directive,args:[{selector:"input[cleave],textarea[cleave]"}]}],e.ctorParameters=function(){return[{type:t.ElementRef},{type:Array,decorators:[{type:t.Inject,args:[n.NG_VALUE_ACCESSOR]},{type:t.Optional}]}]},e.propDecorators={cleave:[{type:t.Input}],onInput:[{type:t.HostListener,args:["input",["$event.target.value"]]}]},e}(),a=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{imports:[],declarations:[i],exports:[i]}]}],e}();e.NgxCleaveDirective=i,e.NgxCleaveDirectiveModule=a,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-cleave-directive.umd.min.js.map