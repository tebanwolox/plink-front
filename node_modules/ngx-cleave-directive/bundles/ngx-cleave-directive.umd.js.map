{"version":3,"file":"ngx-cleave-directive.umd.js.map","sources":["ng://ngx-cleave-directive/ngx-cleave.directive.ts","ng://ngx-cleave-directive/ngx-cleave-directive.module.ts"],"sourcesContent":["import {\n  Directive,\n  ElementRef,\n  HostListener,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n} from '@angular/core';\nimport {\n  ControlValueAccessor,\n  NG_VALUE_ACCESSOR,\n} from '@angular/forms';\n\nimport * as Cleave from 'cleave.js';\n\n@Directive({\n  selector: 'input[cleave],textarea[cleave]',\n})\nexport class NgxCleaveDirective implements OnInit, OnDestroy {\n\n  @Input() set cleave (cleave: any) {\n\n    this._cleave = cleave;\n\n    this.setCleave();\n\n  }\n\n  private _cleave: any;\n  private _cleaveInstance: Cleave;\n  private _value: string;\n  private _valueAccessor: ControlValueAccessor;\n  private _writeValue: (value) => void;\n\n  constructor (\n    private elementRef: ElementRef,\n    @Inject(NG_VALUE_ACCESSOR) @Optional() private valueAccessors: ControlValueAccessor[],\n  ) {\n  }\n\n  ngOnInit () {\n\n    if (!this.valueAccessors) {\n\n      console.warn('Note: The cleave directive should be used with the ngModel, formControl or formControlName directives.');\n\n      return;\n\n    }\n\n    if (this.valueAccessors.length) {\n\n      this._valueAccessor = this.valueAccessors[0];\n\n      this._writeValue = this._valueAccessor.writeValue;\n      this._valueAccessor.writeValue = (value) => {\n\n        if (this._writeValue) {\n          this._writeValue.call(this._valueAccessor, value);\n        }\n\n        this.setCleave();\n\n      };\n\n    }\n\n  }\n\n  ngOnDestroy () {\n\n    if (this._valueAccessor && this._writeValue) {\n\n      this._valueAccessor.writeValue = this._writeValue;\n\n    }\n\n    if (this._cleaveInstance) {\n\n      this._cleaveInstance.destroy();\n\n    }\n\n  }\n\n  @HostListener('input', ['$event.target.value'])\n  onInput (value: string): void {\n\n    this._value = value;\n\n  }\n\n  private setCleave () {\n\n    if (this._cleaveInstance) {\n\n      this._cleaveInstance.destroy();\n\n    }\n\n    const el = this.elementRef.nativeElement;\n    this._cleaveInstance = new Cleave(el, {\n      ...this._cleave,\n      onValueChanged: ({ target }) => {\n        if (target.value !== this._value) {\n\n          this.dispatchEvent(el, 'input');\n\n        }\n      },\n    });\n\n    // hack for model -> view cleave\n    setTimeout(() => this.dispatchEvent(el, 'input'), 0);\n\n  }\n\n  private dispatchEvent (el, eventType) {\n\n    const event = document.createEvent('Event');\n    event.initEvent(eventType, false, false);\n    el.dispatchEvent(event);\n\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgxCleaveDirective } from './ngx-cleave.directive';\n\n@NgModule({\n  imports: [],\n  declarations: [NgxCleaveDirective],\n  exports: [NgxCleaveDirective],\n})\nexport class NgxCleaveDirectiveModule {\n}\n"],"names":["Directive","ElementRef","Inject","NG_VALUE_ACCESSOR","Optional","Input","HostListener","NgModule"],"mappings":";;;;;;;;;;;QAoCE,4BACU,YACuC;YADvC,eAAU,GAAV,UAAU;YAC6B,mBAAc,GAAd,cAAc;SAE9D;8BAlBY,sCAAM;;;;0BAAE,MAAW;gBAE9B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;gBAEtB,IAAI,CAAC,SAAS,EAAE,CAAC;;;;;;;;QAgBnB,qCAAQ;;;YAAR;gBAAA,iBA2BC;gBAzBC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;oBAExB,OAAO,CAAC,IAAI,CAAC,wGAAwG,CAAC,CAAC;oBAEvH,OAAO;iBAER;gBAED,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE;oBAE9B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;oBAE7C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC;oBAClD,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,UAAC,KAAK;wBAErC,IAAI,KAAI,CAAC,WAAW,EAAE;4BACpB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAI,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;yBACnD;wBAED,KAAI,CAAC,SAAS,EAAE,CAAC;qBAElB,CAAC;iBAEH;aAEF;;;;QAED,wCAAW;;;YAAX;gBAEE,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,WAAW,EAAE;oBAE3C,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;iBAEnD;gBAED,IAAI,IAAI,CAAC,eAAe,EAAE;oBAExB,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;iBAEhC;aAEF;;;;;QAGD,oCAAO;;;;sBAAE,KAAa;gBAEpB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;;;;;QAId,sCAAS;;;;;gBAEf,IAAI,IAAI,CAAC,eAAe,EAAE;oBAExB,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;iBAEhC;gBAED,qBAAM,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;gBACzC,IAAI,CAAC,eAAe,GAAG,IAAI,MAAM,CAAC,EAAE,uBAC/B,IAAI,CAAC,OAAO,IACf,cAAc,EAAE,UAAC,EAAU;4BAAR,kBAAM;wBACvB,IAAI,MAAM,CAAC,KAAK,KAAK,KAAI,CAAC,MAAM,EAAE;4BAEhC,KAAI,CAAC,aAAa,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;yBAEjC;qBACF,IACD,CAAC;;gBAGH,UAAU,CAAC,cAAM,OAAA,KAAI,CAAC,aAAa,CAAC,EAAE,EAAE,OAAO,CAAC,GAAA,EAAE,CAAC,CAAC,CAAC;;;;;;;QAI/C,0CAAa;;;;;sBAAE,EAAE,EAAE,SAAS;gBAElC,qBAAM,KAAK,GAAG,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;gBAC5C,KAAK,CAAC,SAAS,CAAC,SAAS,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;gBACzC,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;;;oBA1G3BA,cAAS,SAAC;wBACT,QAAQ,EAAE,gCAAgC;qBAC3C;;;;;wBAjBCC,eAAU;oDAoCPC,WAAM,SAACC,uBAAiB,cAAGC,aAAQ;;;;+BAhBrCC,UAAK;gCAiELC,iBAAY,SAAC,OAAO,EAAE,CAAC,qBAAqB,CAAC;;iCAvFhD;;;;;;;ACAA;;;;oBAGCC,aAAQ,SAAC;wBACR,OAAO,EAAE,EAAE;wBACX,YAAY,EAAE,CAAC,kBAAkB,CAAC;wBAClC,OAAO,EAAE,CAAC,kBAAkB,CAAC;qBAC9B;;uCAPD;;;;;;;;;;;;;;;;;;;;;;;;"}
